/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Author, Media, Menu, MenuItem, Post, Query, Single, TemplateArgs, TemplateQuery, Theme, WebpressContext } from "@webpress/core";
import { WebpressMenuOptions } from "./packages/theme/src/components/wp-menu/wp-menu";
export namespace Components {
    interface Bhaa404 {
    }
    interface BhaaExpandingCopy {
        "linkText": string;
        "post": Post;
    }
    interface BhaaFooter {
        "query": TemplateQuery;
        "theme": Theme;
    }
    interface BhaaFrontPage {
        "query": Query;
    }
    interface BhaaHeader {
        "query": TemplateQuery;
        "theme": Theme;
    }
    interface BhaaHeartHerald {
        "theme": Theme;
    }
    interface BhaaPage {
        "query": Query;
    }
    interface BhaaPost {
        "query": Query;
    }
    interface BhaaPostBreadcrumbs {
        "post": Post;
    }
    interface BhaaRoot {
        "query": TemplateQuery;
        "theme": Theme;
    }
    interface BhaaUpdates {
        "query": Query;
    }
    interface BhaaWrapper {
    }
    interface WebpressDebug {
    }
    interface WebpressTheme {
        "context": WebpressContext;
    }
    interface WpAuthor {
        "author": Author;
        "permalink": boolean;
    }
    interface WpExcerptCopy {
        "post": Single;
    }
    interface WpLink {
        "object": Single | MenuItem;
        "path": string;
    }
    interface WpMedia {
        "media": Media;
    }
    interface WpMenu {
        "menu": Menu;
        "options": WebpressMenuOptions;
        "query": TemplateQuery;
    }
    interface WpRouter {
        "query": TemplateQuery;
    }
    interface WpRunningCopy {
        "content": string;
        "post": Single;
    }
    interface WpTemplate {
        "args": TemplateArgs;
        "component": string;
        "componentProps"?: { [key: string]: any };
        "menus": any[];
        "query": Query;
        "sidebars": any[];
    }
    interface WpTitle {
        "permalink": boolean;
        "post": Single;
    }
}
declare global {
    interface HTMLBhaa404Element extends Components.Bhaa404, HTMLStencilElement {
    }
    var HTMLBhaa404Element: {
        prototype: HTMLBhaa404Element;
        new (): HTMLBhaa404Element;
    };
    interface HTMLBhaaExpandingCopyElement extends Components.BhaaExpandingCopy, HTMLStencilElement {
    }
    var HTMLBhaaExpandingCopyElement: {
        prototype: HTMLBhaaExpandingCopyElement;
        new (): HTMLBhaaExpandingCopyElement;
    };
    interface HTMLBhaaFooterElement extends Components.BhaaFooter, HTMLStencilElement {
    }
    var HTMLBhaaFooterElement: {
        prototype: HTMLBhaaFooterElement;
        new (): HTMLBhaaFooterElement;
    };
    interface HTMLBhaaFrontPageElement extends Components.BhaaFrontPage, HTMLStencilElement {
    }
    var HTMLBhaaFrontPageElement: {
        prototype: HTMLBhaaFrontPageElement;
        new (): HTMLBhaaFrontPageElement;
    };
    interface HTMLBhaaHeaderElement extends Components.BhaaHeader, HTMLStencilElement {
    }
    var HTMLBhaaHeaderElement: {
        prototype: HTMLBhaaHeaderElement;
        new (): HTMLBhaaHeaderElement;
    };
    interface HTMLBhaaHeartHeraldElement extends Components.BhaaHeartHerald, HTMLStencilElement {
    }
    var HTMLBhaaHeartHeraldElement: {
        prototype: HTMLBhaaHeartHeraldElement;
        new (): HTMLBhaaHeartHeraldElement;
    };
    interface HTMLBhaaPageElement extends Components.BhaaPage, HTMLStencilElement {
    }
    var HTMLBhaaPageElement: {
        prototype: HTMLBhaaPageElement;
        new (): HTMLBhaaPageElement;
    };
    interface HTMLBhaaPostElement extends Components.BhaaPost, HTMLStencilElement {
    }
    var HTMLBhaaPostElement: {
        prototype: HTMLBhaaPostElement;
        new (): HTMLBhaaPostElement;
    };
    interface HTMLBhaaPostBreadcrumbsElement extends Components.BhaaPostBreadcrumbs, HTMLStencilElement {
    }
    var HTMLBhaaPostBreadcrumbsElement: {
        prototype: HTMLBhaaPostBreadcrumbsElement;
        new (): HTMLBhaaPostBreadcrumbsElement;
    };
    interface HTMLBhaaRootElement extends Components.BhaaRoot, HTMLStencilElement {
    }
    var HTMLBhaaRootElement: {
        prototype: HTMLBhaaRootElement;
        new (): HTMLBhaaRootElement;
    };
    interface HTMLBhaaUpdatesElement extends Components.BhaaUpdates, HTMLStencilElement {
    }
    var HTMLBhaaUpdatesElement: {
        prototype: HTMLBhaaUpdatesElement;
        new (): HTMLBhaaUpdatesElement;
    };
    interface HTMLBhaaWrapperElement extends Components.BhaaWrapper, HTMLStencilElement {
    }
    var HTMLBhaaWrapperElement: {
        prototype: HTMLBhaaWrapperElement;
        new (): HTMLBhaaWrapperElement;
    };
    interface HTMLWebpressDebugElement extends Components.WebpressDebug, HTMLStencilElement {
    }
    var HTMLWebpressDebugElement: {
        prototype: HTMLWebpressDebugElement;
        new (): HTMLWebpressDebugElement;
    };
    interface HTMLWebpressThemeElement extends Components.WebpressTheme, HTMLStencilElement {
    }
    var HTMLWebpressThemeElement: {
        prototype: HTMLWebpressThemeElement;
        new (): HTMLWebpressThemeElement;
    };
    interface HTMLWpAuthorElement extends Components.WpAuthor, HTMLStencilElement {
    }
    var HTMLWpAuthorElement: {
        prototype: HTMLWpAuthorElement;
        new (): HTMLWpAuthorElement;
    };
    interface HTMLWpExcerptCopyElement extends Components.WpExcerptCopy, HTMLStencilElement {
    }
    var HTMLWpExcerptCopyElement: {
        prototype: HTMLWpExcerptCopyElement;
        new (): HTMLWpExcerptCopyElement;
    };
    interface HTMLWpLinkElement extends Components.WpLink, HTMLStencilElement {
    }
    var HTMLWpLinkElement: {
        prototype: HTMLWpLinkElement;
        new (): HTMLWpLinkElement;
    };
    interface HTMLWpMediaElement extends Components.WpMedia, HTMLStencilElement {
    }
    var HTMLWpMediaElement: {
        prototype: HTMLWpMediaElement;
        new (): HTMLWpMediaElement;
    };
    interface HTMLWpMenuElement extends Components.WpMenu, HTMLStencilElement {
    }
    var HTMLWpMenuElement: {
        prototype: HTMLWpMenuElement;
        new (): HTMLWpMenuElement;
    };
    interface HTMLWpRouterElement extends Components.WpRouter, HTMLStencilElement {
    }
    var HTMLWpRouterElement: {
        prototype: HTMLWpRouterElement;
        new (): HTMLWpRouterElement;
    };
    interface HTMLWpRunningCopyElement extends Components.WpRunningCopy, HTMLStencilElement {
    }
    var HTMLWpRunningCopyElement: {
        prototype: HTMLWpRunningCopyElement;
        new (): HTMLWpRunningCopyElement;
    };
    interface HTMLWpTemplateElement extends Components.WpTemplate, HTMLStencilElement {
    }
    var HTMLWpTemplateElement: {
        prototype: HTMLWpTemplateElement;
        new (): HTMLWpTemplateElement;
    };
    interface HTMLWpTitleElement extends Components.WpTitle, HTMLStencilElement {
    }
    var HTMLWpTitleElement: {
        prototype: HTMLWpTitleElement;
        new (): HTMLWpTitleElement;
    };
    interface HTMLElementTagNameMap {
        "bhaa-404": HTMLBhaa404Element;
        "bhaa-expanding-copy": HTMLBhaaExpandingCopyElement;
        "bhaa-footer": HTMLBhaaFooterElement;
        "bhaa-front-page": HTMLBhaaFrontPageElement;
        "bhaa-header": HTMLBhaaHeaderElement;
        "bhaa-heart-herald": HTMLBhaaHeartHeraldElement;
        "bhaa-page": HTMLBhaaPageElement;
        "bhaa-post": HTMLBhaaPostElement;
        "bhaa-post-breadcrumbs": HTMLBhaaPostBreadcrumbsElement;
        "bhaa-root": HTMLBhaaRootElement;
        "bhaa-updates": HTMLBhaaUpdatesElement;
        "bhaa-wrapper": HTMLBhaaWrapperElement;
        "webpress-debug": HTMLWebpressDebugElement;
        "webpress-theme": HTMLWebpressThemeElement;
        "wp-author": HTMLWpAuthorElement;
        "wp-excerpt-copy": HTMLWpExcerptCopyElement;
        "wp-link": HTMLWpLinkElement;
        "wp-media": HTMLWpMediaElement;
        "wp-menu": HTMLWpMenuElement;
        "wp-router": HTMLWpRouterElement;
        "wp-running-copy": HTMLWpRunningCopyElement;
        "wp-template": HTMLWpTemplateElement;
        "wp-title": HTMLWpTitleElement;
    }
}
declare namespace LocalJSX {
    interface Bhaa404 {
    }
    interface BhaaExpandingCopy {
        "linkText"?: string;
        "post"?: Post;
    }
    interface BhaaFooter {
        "query"?: TemplateQuery;
        "theme"?: Theme;
    }
    interface BhaaFrontPage {
        "query"?: Query;
    }
    interface BhaaHeader {
        "query"?: TemplateQuery;
        "theme"?: Theme;
    }
    interface BhaaHeartHerald {
        "theme"?: Theme;
    }
    interface BhaaPage {
        "query"?: Query;
    }
    interface BhaaPost {
        "query"?: Query;
    }
    interface BhaaPostBreadcrumbs {
        "post"?: Post;
    }
    interface BhaaRoot {
        "query"?: TemplateQuery;
        "theme"?: Theme;
    }
    interface BhaaUpdates {
        "query"?: Query;
    }
    interface BhaaWrapper {
        "onBreakpointChanged"?: (event: CustomEvent<number>) => void;
    }
    interface WebpressDebug {
    }
    interface WebpressTheme {
        "context"?: WebpressContext;
    }
    interface WpAuthor {
        "author"?: Author;
        "permalink"?: boolean;
    }
    interface WpExcerptCopy {
        "post"?: Single;
    }
    interface WpLink {
        "object"?: Single | MenuItem;
        "onWebpressNavigation"?: (event: CustomEvent<{ url }>) => void;
        "path"?: string;
    }
    interface WpMedia {
        "media"?: Media;
    }
    interface WpMenu {
        "menu"?: Menu;
        "options"?: WebpressMenuOptions;
        "query"?: TemplateQuery;
    }
    interface WpRouter {
        "query"?: TemplateQuery;
    }
    interface WpRunningCopy {
        "content"?: string;
        "post"?: Single;
    }
    interface WpTemplate {
        "args"?: TemplateArgs;
        "component"?: string;
        "componentProps"?: { [key: string]: any };
        "menus"?: any[];
        "query"?: Query;
        "sidebars"?: any[];
    }
    interface WpTitle {
        "permalink"?: boolean;
        "post"?: Single;
    }
    interface IntrinsicElements {
        "bhaa-404": Bhaa404;
        "bhaa-expanding-copy": BhaaExpandingCopy;
        "bhaa-footer": BhaaFooter;
        "bhaa-front-page": BhaaFrontPage;
        "bhaa-header": BhaaHeader;
        "bhaa-heart-herald": BhaaHeartHerald;
        "bhaa-page": BhaaPage;
        "bhaa-post": BhaaPost;
        "bhaa-post-breadcrumbs": BhaaPostBreadcrumbs;
        "bhaa-root": BhaaRoot;
        "bhaa-updates": BhaaUpdates;
        "bhaa-wrapper": BhaaWrapper;
        "webpress-debug": WebpressDebug;
        "webpress-theme": WebpressTheme;
        "wp-author": WpAuthor;
        "wp-excerpt-copy": WpExcerptCopy;
        "wp-link": WpLink;
        "wp-media": WpMedia;
        "wp-menu": WpMenu;
        "wp-router": WpRouter;
        "wp-running-copy": WpRunningCopy;
        "wp-template": WpTemplate;
        "wp-title": WpTitle;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "bhaa-404": LocalJSX.Bhaa404 & JSXBase.HTMLAttributes<HTMLBhaa404Element>;
            "bhaa-expanding-copy": LocalJSX.BhaaExpandingCopy & JSXBase.HTMLAttributes<HTMLBhaaExpandingCopyElement>;
            "bhaa-footer": LocalJSX.BhaaFooter & JSXBase.HTMLAttributes<HTMLBhaaFooterElement>;
            "bhaa-front-page": LocalJSX.BhaaFrontPage & JSXBase.HTMLAttributes<HTMLBhaaFrontPageElement>;
            "bhaa-header": LocalJSX.BhaaHeader & JSXBase.HTMLAttributes<HTMLBhaaHeaderElement>;
            "bhaa-heart-herald": LocalJSX.BhaaHeartHerald & JSXBase.HTMLAttributes<HTMLBhaaHeartHeraldElement>;
            "bhaa-page": LocalJSX.BhaaPage & JSXBase.HTMLAttributes<HTMLBhaaPageElement>;
            "bhaa-post": LocalJSX.BhaaPost & JSXBase.HTMLAttributes<HTMLBhaaPostElement>;
            "bhaa-post-breadcrumbs": LocalJSX.BhaaPostBreadcrumbs & JSXBase.HTMLAttributes<HTMLBhaaPostBreadcrumbsElement>;
            "bhaa-root": LocalJSX.BhaaRoot & JSXBase.HTMLAttributes<HTMLBhaaRootElement>;
            "bhaa-updates": LocalJSX.BhaaUpdates & JSXBase.HTMLAttributes<HTMLBhaaUpdatesElement>;
            "bhaa-wrapper": LocalJSX.BhaaWrapper & JSXBase.HTMLAttributes<HTMLBhaaWrapperElement>;
            "webpress-debug": LocalJSX.WebpressDebug & JSXBase.HTMLAttributes<HTMLWebpressDebugElement>;
            "webpress-theme": LocalJSX.WebpressTheme & JSXBase.HTMLAttributes<HTMLWebpressThemeElement>;
            "wp-author": LocalJSX.WpAuthor & JSXBase.HTMLAttributes<HTMLWpAuthorElement>;
            "wp-excerpt-copy": LocalJSX.WpExcerptCopy & JSXBase.HTMLAttributes<HTMLWpExcerptCopyElement>;
            "wp-link": LocalJSX.WpLink & JSXBase.HTMLAttributes<HTMLWpLinkElement>;
            "wp-media": LocalJSX.WpMedia & JSXBase.HTMLAttributes<HTMLWpMediaElement>;
            "wp-menu": LocalJSX.WpMenu & JSXBase.HTMLAttributes<HTMLWpMenuElement>;
            "wp-router": LocalJSX.WpRouter & JSXBase.HTMLAttributes<HTMLWpRouterElement>;
            "wp-running-copy": LocalJSX.WpRunningCopy & JSXBase.HTMLAttributes<HTMLWpRunningCopyElement>;
            "wp-template": LocalJSX.WpTemplate & JSXBase.HTMLAttributes<HTMLWpTemplateElement>;
            "wp-title": LocalJSX.WpTitle & JSXBase.HTMLAttributes<HTMLWpTitleElement>;
        }
    }
}
